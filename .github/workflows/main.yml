name: Deploy Medusa to AWS ECS with Fargate

on:
  push:
    branches:
      - main  # Trigger this workflow only for the main branch

env:
  AWS_REGION: us-east-1  # Change to your preferred region
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}  # Store your AWS Account ID in GitHub Secrets
  ECR_REPO_NAME: medusa-repo
  IMAGE_TAG: latest

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v2

      # Set up AWS credentials using the GitHub secrets
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          region: ${{ env.AWS_REGION }}

      # Log in to Amazon ECR
      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      # Build the Docker image
      - name: Build Docker Image
        run: |
          docker build -t ${{ env.ECR_REPO_NAME }}:${{ env.IMAGE_TAG }} .

      # Push the Docker image to Amazon ECR
      - name: Push Docker Image to Amazon ECR
        run: |
          docker tag ${{ env.ECR_REPO_NAME }}:${{ env.IMAGE_TAG }} ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_NAME }}:${{ env.IMAGE_TAG }}
          docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPO_NAME }}:${{ env.IMAGE_TAG }}

      # Run Terraform to deploy to ECS
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.7  # Specify your required Terraform version

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      # Optionally, you can send notifications or status updates
      - name: Notify Deployment Success
        run: echo "Deployment successful!"
